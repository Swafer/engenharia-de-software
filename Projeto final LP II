{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOslBYJMSgL0oOvFCn4tmIn",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Swafer/engenharia-de-software/blob/main/Projeto%20final%20LP%20II\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from abc import ABC, abstractmethod\n",
        "\n",
        "class Pessoa(ABC):\n",
        "    def __init__(self, nome, idade):\n",
        "        self.nome = nome\n",
        "        self.idade = idade\n",
        "\n",
        "    @abstractmethod\n",
        "    def obter_info(self):\n",
        "        pass\n",
        "\n",
        "class Aluno(Pessoa):\n",
        "    def __init__(self, nome, idade, matricula):\n",
        "        super().__init__(nome, idade)\n",
        "        self.matricula = matricula21\n",
        "\n",
        "    def obter_info(self):\n",
        "        return f\"Aluno: {self.nome}, Idade: {self.idade}, Matrícula: {self.matricula}\"\n",
        "\n",
        "class Professor(Pessoa):\n",
        "    def __init__(self, nome, idade, codigo):\n",
        "        super().__init__(nome, idade)\n",
        "        self.codigo = codigo\n",
        "\n",
        "    def obter_info(self):\n",
        "        return f\"Professor: {self.nome}, Idade: {self.idade}, Código: {self.codigo}\"\n",
        "\n",
        "class Disciplina:\n",
        "    def __init__(self, nome, codigo):\n",
        "        self.nome = nome\n",
        "        self.codigo = codigo\n",
        "\n",
        "    def obter_info(self):\n",
        "        return f\"Disciplina: {self.nome}, Código: {self.codigo}\"\n",
        "\n",
        "class Curso:\n",
        "    def __init__(self, nome, codigo):\n",
        "        self.nome = nome\n",
        "        self.codigo = codigo\n",
        "        self.disciplinas = []\n",
        "\n",
        "    def adicionar_disciplina(self, disciplina):\n",
        "        self.disciplinas.append(disciplina)\n",
        "\n",
        "    def obter_info(self):\n",
        "        info = f\"Curso: {self.nome}, Código: {self.codigo}\\nDisciplinas:\"\n",
        "        for disciplina in self.disciplinas:\n",
        "            info += f\"\\n\\t- {disciplina.obter_info()}\"\n",
        "        return info\n",
        "\n",
        "def menu():\n",
        "    print(\"MENU:\")\n",
        "    print(\"1- Gerenciar ALUNOS\")\n",
        "    print(\"2- Gerenciar PROFESSORES\")\n",
        "    print(\"3- Gerenciar DISCIPLINAS\")\n",
        "    print(\"4- Gerenciar CURSOS\")\n",
        "    print(\"5- SAIR\")\n",
        "\n",
        "alunos = []\n",
        "professores = []\n",
        "disciplinas = []\n",
        "cursos = []\n",
        "\n",
        "while True:\n",
        "    menu()\n",
        "    opcao = input(\"Escolha uma opção: \")\n",
        "\n",
        "    if opcao == '1':\n",
        "        nome = input(\"Digite o nome do aluno: \")\n",
        "        idade = input(\"Digite a idade do aluno: \")\n",
        "        matricula = input(\"Digite a matrícula do aluno: \")\n",
        "        aluno = Aluno(nome, idade, matricula)\n",
        "        alunos.append(aluno)\n",
        "\n",
        "    elif opcao == '2':\n",
        "        nome = input(\"Digite o nome do professor: \")\n",
        "        idade = input(\"Digite a idade do professor: \")\n",
        "        codigo = input(\"Digite o código do professor: \")\n",
        "        professor = Professor(nome, idade, codigo)\n",
        "        professores.append(professor)\n",
        "\n",
        "    elif opcao == '3':\n",
        "        nome = input(\"Digite o nome da disciplina: \")\n",
        "        codigo = input(\"Digite o código da disciplina: \")\n",
        "        disciplina = Disciplina(nome, codigo)\n",
        "        disciplinas.append(disciplina)\n",
        "\n",
        "    elif opcao == '4':\n",
        "        nome = input(\"Digite o nome do curso: \")\n",
        "        codigo = input(\"Digite o código do curso: \")\n",
        "        curso = Curso(nome, codigo)\n",
        "\n",
        "        while True:\n",
        "            print(\"Adicione disciplinas ao curso:\")\n",
        "            for i, disciplina in enumerate(disciplinas, 1):\n",
        "                print(f\"{i}- {disciplina.obter_info()}\")\n",
        "\n",
        "            escolha = input(\"Escolha uma disciplina (0 para sair): \")\n",
        "            if escolha == '0':\n",
        "                break\n",
        "\n",
        "            try:\n",
        "                escolha = int(escolha)\n",
        "                disciplina_escolhida = disciplinas[escolha - 1]\n",
        "                curso.adicionar_disciplina(disciplina_escolhida)\n",
        "            except (ValueError, IndexError):\n",
        "                print(\"Escolha inválida. Tente novamente.\")\n",
        "\n",
        "        cursos.append(curso)\n",
        "\n",
        "    elif opcao == '5':\n",
        "        break\n",
        "\n",
        "    else:\n",
        "        print(\"Opção inválida. Tente novamente.\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 704
        },
        "id": "uxSr7ITIBUs8",
        "outputId": "4d18ba31-c910-41a4-c1d8-93c20678d33c"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MENU:\n",
            "1- Gerenciar ALUNOS\n",
            "2- Gerenciar PROFESSORES\n",
            "3- Gerenciar DISCIPLINAS\n",
            "4- Gerenciar CURSOS\n",
            "5- SAIR\n",
            "Escolha uma opção: 1\n",
            "Digite o nome do aluno: a\n",
            "Digite a idade do aluno: 14\n",
            "Digite a matrícula do aluno: 123\n",
            "MENU:\n",
            "1- Gerenciar ALUNOS\n",
            "2- Gerenciar PROFESSORES\n",
            "3- Gerenciar DISCIPLINAS\n",
            "4- Gerenciar CURSOS\n",
            "5- SAIR\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-6-6398c2df3c6a>\u001b[0m in \u001b[0;36m<cell line: 64>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     64\u001b[0m \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     65\u001b[0m     \u001b[0mmenu\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 66\u001b[0;31m     \u001b[0mopcao\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Escolha uma opção: \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     67\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     68\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mopcao\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'1'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36mraw_input\u001b[0;34m(self, prompt)\u001b[0m\n\u001b[1;32m    849\u001b[0m                 \u001b[0;34m\"raw_input was called, but this frontend does not support input requests.\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    850\u001b[0m             )\n\u001b[0;32m--> 851\u001b[0;31m         return self._input_request(str(prompt),\n\u001b[0m\u001b[1;32m    852\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_ident\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    853\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_parent_header\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/ipykernel/kernelbase.py\u001b[0m in \u001b[0;36m_input_request\u001b[0;34m(self, prompt, ident, parent, password)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m                 \u001b[0;31m# re-raise KeyboardInterrupt, to truncate traceback\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyboardInterrupt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Interrupted by user\"\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Invalid Message:\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mexc_info\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: Interrupted by user"
          ]
        }
      ]
    }
  ]
}